package com.github.imapper;

/**
 * mapping interface for application to hold
 * 
 * @author  chris
 * @version  20141012
 * @since  0.0.1
 */
public interface IMapper
{
    
    /** 
     * Maps {@code source} to an exist instance of {@code destination} using mapping configurations.
     * If mapping configurations can be found, then will use it.
     * @param source          source object for mapping
     * @param destination     destination object for mapping
     */
    public void map(Object source, Object destination)
        throws MapException;
    
    /** 
     * Maps {@code source} to an new instance of {@code expectedClass} which is generated by default constructor. 
     * If mapping configurations can be found, then will use it.
     * @param source          source object for mapping
     * @param expectedClass   expected destination object for mapping
     * @return                an new instance of {@code expectedClass}
     * @throws MapException   some unexpected fault
     */
    public <E> E map(Object source, Class<E> expectedClass)
        throws MapException;
    
    /** 
     * Maps {@code source} to an exist instance of {@code destination} using mapping configurations.
     * @param source          source object for mapping
     * @param destination     destination object for mapping
     * @param identification  configurations  id 
     * @throws MapException   mapping configurations can not be found
     */
    public void map(Object source, Object destination, String identification)
        throws MapException;
    
    /** 
     * Maps {@code source} to an new instance of {@code expectedClass} which is generated by default constructor using mapping configurations. 
     * @param source         source object for mapping
     * @param expectedClass  expected destination object for mapping
     * @param identification configurations id
     * @return               an new instance of {@code expectedClass}
     * @throws MapException  mapping configurations can not be found
     */
    public <E> E map(Object source, Class<E> expectedClass, String identification)
        throws MapException;
}
